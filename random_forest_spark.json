{
  "paragraphs": [
    {
      "text": "from pyspark.ml.feature import OneHotEncoder, StringIndexer\r\nfrom pyspark.ml.linalg import Vectors\r\nfrom pyspark.ml.feature import VectorAssembler\r\nimport pyspark.sql.functions as F\r\nimport pyspark.sql.types as T\r\n\r\nfrom pyspark.ml.classification import RandomForestClassifier\r\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\r\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\r\nfrom pyspark.ml.feature import IndexToString, StringIndexer, VectorIndexer\r\nfrom pyspark.ml.feature import StandardScaler\r\nfrom pyspark.ml import Pipeline\r\nimport numpy as np\r\nimport pandas as pd\r\nimport time\r\n\r\nimport warnings\r\nwarnings.simplefilter(action\u003d\u0027ignore\u0027, category\u003dFutureWarning)",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569353140751_1325825014",
      "id": "20190924-192540_1992403255_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:25:35 PM",
      "dateSubmitted": "Sep 30, 2019 7:04:45 PM",
      "dateStarted": "Sep 30, 2019 7:04:51 PM",
      "dateFinished": "Sep 30, 2019 7:05:48 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "title": "reading data",
      "text": "#test for version\r\ndf \u003d spark.read.csv(\u0027s3://devexternal-mzhang/dataset/filtered_df_rank_ML_sep19.csv\u0027, header\u003dTrue, inferSchema\u003dTrue)  \r\ndf \u003d df.withColumn(\u0027label\u0027, df[\u0027rank\u0027] - 1)   \r\ndf \u003d df.withColumn(\u0027day_part\u0027, F.when(df.hour \u003c 3, \u0027g1\u0027).when(df.hour \u003c 6, \u0027g2\u0027).when(df.hour \u003c 9, \u0027g3\u0027).when(df.hour \u003c 12, \u0027g4\u0027).when(df.hour \u003c 15, \u0027g5\u0027).when(df.hour \u003c 18, \u0027g6\u0027).when(df.hour \u003c 21, \u0027g7\u0027).otherwise(\u0027g8\u0027))",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Nov 25, 2019 10:29:37 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [
          {
            "id": 0,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d0",
            "numTasks": 1,
            "numCompletedTasks": 1,
            "stages": [
              {
                "id": 0,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d0\u0026attempt\u003d0",
                "numCompleteTasks": 1,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 1
              }
            ],
            "status": "Success"
          },
          {
            "id": 1,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d1",
            "numTasks": 4,
            "numCompletedTasks": 4,
            "stages": [
              {
                "id": 1,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d1\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              }
            ],
            "status": "Success"
          }
        ],
        "numCompletedTasks": 5,
        "numTasks": 5,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569601472633_586845674",
      "id": "20190927-162432_1071393123_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 27, 2019 4:24:32 PM",
      "dateSubmitted": "Sep 30, 2019 7:06:36 PM",
      "dateStarted": "Sep 30, 2019 7:06:36 PM",
      "dateFinished": "Sep 30, 2019 7:06:56 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "def metrics_per_key(key):\r\n    import pyspark.sql.functions as F\r\n   # df \u003d spark.read.csv(\u0027s3://fw-advanced-analytics/Fish/slot_targeting/filtered_df_rank_ML_sep19.csv\u0027, header\u003dTrue, inferSchema\u003dTrue)  \r\n   # df \u003d df.withColumn(\u0027label\u0027, df[\u0027rank\u0027] - 1)   \r\n   # df \u003d df.withColumn(\u0027day_part\u0027, F.when(df.hour \u003c 3, \u0027g1\u0027).when(df.hour \u003c 6, \u0027g2\u0027).when(df.hour \u003c 9, \u0027g3\u0027).when(df.hour \u003c 12, \u0027g4\u0027).when(df.hour \u003c 15, \u0027g5\u0027).when(df.hour \u003c 18, \u0027g6\u0027).when(df.hour \u003c 21, \u0027g7\u0027).otherwise(\u0027g8\u0027))\r\n    key \u003d [x[0] for x in key.collect()]\r\n    key \u003d key[0]\r\n    df_filtered \u003d df.filter(F.col(\u0027key\u0027) \u003d\u003d key).drop(\u0027key\u0027)\r\n    \r\n    stringIndexer_day \u003d StringIndexer(inputCol\u003d\"day\", outputCol\u003d\"dayIndex\")\r\n    stringIndexer_day_hr \u003d StringIndexer(inputCol\u003d\"day_hour\", outputCol\u003d\"day_hourIndex\")\r\n    stringIndexer_day_part \u003d StringIndexer(inputCol\u003d\"day_part\", outputCol\u003d\"day_partIndex\")\r\n    model_day \u003d stringIndexer_day.fit(df)\r\n    indexed_day \u003d model_day.transform(df)\r\n    model_day_hour \u003d stringIndexer_day_hr.fit(indexed_day)\r\n    indexed_all \u003d model_day_hour.transform(indexed_day)\r\n    model_day_part \u003d stringIndexer_day_part.fit(indexed_all)\r\n    indexed_all_including_day_part \u003d model_day_part.transform(indexed_all)\r\n    encoder_day \u003d OneHotEncoder(inputCol\u003d\"dayIndex\", outputCol\u003d\"dayIndexVec\")\r\n    encoder_dayHour \u003d OneHotEncoder(inputCol\u003d\"day_hourIndex\", outputCol\u003d\"day_hourIndexVec\")\r\n    encoder_hour \u003d OneHotEncoder(inputCol\u003d\"hour\", outputCol\u003d\"hourIndexVec\")\r\n    encoder_day_part \u003d OneHotEncoder(inputCol\u003d\"day_partIndex\", outputCol\u003d\"day_partIndexVec\")\r\n    encoded_day \u003d encoder_day.transform(indexed_all_including_day_part)\r\n    encode_day_dayHour \u003d encoder_dayHour.transform(encoded_day)\r\n    encoded_all \u003d encoder_hour.transform(encode_day_dayHour)\r\n    encoded_all_with_day_part \u003d encoder_day_part.transform(encoded_all)\r\n    assembler \u003d VectorAssembler(inputCols\u003d[\"hourIndexVec\", \"dayIndexVec\", \"day_hourIndexVec\", \"day_partIndexVec\",\"bid\"], outputCol\u003d\"features\")\r\n    assembled \u003d assembler.transform(encoded_all_with_day_part)\r\n    assembled \u003d assembled.select([\"key\",\"label\",\"features\"])\r\n    assembled.persist()\r\n    labelIndexer \u003d StringIndexer(inputCol\u003d\"label\", outputCol\u003d\"indexedLabel\").fit(assembled)\r\n    featureIndexer \u003d VectorIndexer(inputCol\u003d\"features\", outputCol\u003d\"indexedFeatures\", maxCategories\u003d4).fit(assembled)\r\n    (trainingData, testData) \u003d assembled.randomSplit([0.8, 0.2], seed \u003d 0)\r\n    rf \u003d RandomForestClassifier(labelCol\u003d\"indexedLabel\", featuresCol\u003d\"indexedFeatures\")\r\n    labelConverter \u003d IndexToString(inputCol\u003d\"prediction\", outputCol\u003d\"predictedLabel\",labels\u003dlabelIndexer.labels)\r\n    pipeline \u003d Pipeline(stages\u003d[labelIndexer, featureIndexer, rf, labelConverter])\r\n    \r\n    paramGrid_rf \u003d ParamGridBuilder().addGrid(rf.maxDepth, [10,20,25,30]).addGrid(rf.numTrees, [10,20,30, 40, 50]).addGrid(rf.maxBins, [16, 32,48,64]).build()\r\n    crossval \u003d CrossValidator(estimator\u003dpipeline,estimatorParamMaps\u003dparamGrid_rf,evaluator\u003dMulticlassClassificationEvaluator(),numFolds\u003d5,parallelism \u003d 10)\r\n    model \u003d crossval.fit(trainingData)\r\n    predictions \u003d model.transform(testData)\r\n    precision \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"weightedPrecision\").evaluate(predictions)\r\n    recall \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"weightedRecall\").evaluate(predictions)\r\n    accuracy \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"accuracy\").evaluate(predictions)\r\n    f1 \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"f1\").evaluate(predictions)\r\n    return {\u0027f1_test\u0027:f1, \u0027precision_test\u0027:precision, \u0027accuracy_test\u0027:accuracy, \u0027recall_test\u0027:recall}\r\n\r\n",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 27, 2019 9:25:19 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v1",
      "jobName": "paragraph_1569443288913_564260514",
      "id": "20190925-202808_1044861319_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 25, 2019 8:28:08 PM",
      "dateSubmitted": "Sep 27, 2019 4:27:41 PM",
      "dateStarted": "Sep 27, 2019 4:27:41 PM",
      "dateFinished": "Sep 27, 2019 4:27:41 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "keys\u003ddf.select (\u0027key\u0027).rdd",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 27, 2019 9:25:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v1",
      "jobName": "paragraph_1569601672005_-236457320",
      "id": "20190927-162752_2008226497_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 27, 2019 4:27:52 PM",
      "dateSubmitted": "Sep 27, 2019 4:31:45 PM",
      "dateStarted": "Sep 27, 2019 4:31:45 PM",
      "dateFinished": "Sep 27, 2019 4:31:45 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "first_key\u003dkeys.first()\nprint(first_key)",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 27, 2019 9:26:10 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [
          {
            "id": 6,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.79.176.220%3A8088%2Fproxy%2Fapplication_1569601317227_0001/jobs/job?spark\u003dtrue\u0026id\u003d6",
            "numTasks": 1,
            "numCompletedTasks": 1,
            "stages": [
              {
                "id": 6,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.79.176.220%3A8088%2Fproxy%2Fapplication_1569601317227_0001/stages/stage/?id\u003d6\u0026attempt\u003d0",
                "numCompleteTasks": 1,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 1
              }
            ],
            "status": "Success"
          }
        ],
        "numCompletedTasks": 1,
        "numTasks": 1,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569601909117_-1835339644",
      "id": "20190927-163149_375720745_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 27, 2019 4:31:49 PM",
      "dateSubmitted": "Sep 27, 2019 4:32:54 PM",
      "dateStarted": "Sep 27, 2019 4:32:55 PM",
      "dateFinished": "Sep 27, 2019 4:32:55 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "results\u003dkeys.mapPartitions(metrics_per_key).collect()",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 27, 2019 9:26:22 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v1",
      "jobName": "paragraph_1569602615156_-1934560532",
      "id": "20190927-164335_1026951814_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 27, 2019 4:43:35 PM",
      "dateSubmitted": "Sep 27, 2019 5:02:27 PM",
      "dateStarted": "Sep 27, 2019 5:02:27 PM",
      "dateFinished": "Sep 27, 2019 5:02:27 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "[x[0] for x in keys.collect()]",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 27, 2019 9:26:40 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [
          {
            "id": 6,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.4.11.233%3A8088%2Fproxy%2Fapplication_1569512393899_0002/jobs/job?spark\u003dtrue\u0026id\u003d6",
            "numTasks": 4,
            "numCompletedTasks": 4,
            "stages": [
              {
                "id": 6,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.4.11.233%3A8088%2Fproxy%2Fapplication_1569512393899_0002/stages/stage/?id\u003d6\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              }
            ],
            "status": "Success"
          }
        ],
        "numCompletedTasks": 4,
        "numTasks": 4,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569518046577_-544687767",
      "id": "20190926-171406_2094052218_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 26, 2019 5:14:06 PM",
      "dateSubmitted": "Sep 26, 2019 5:15:26 PM",
      "dateStarted": "Sep 26, 2019 5:15:26 PM",
      "dateFinished": "Sep 26, 2019 5:15:30 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "stringIndexer_day \u003d StringIndexer(inputCol\u003d\"day\", outputCol\u003d\"dayIndex\")\r\nstringIndexer_day_hr \u003d StringIndexer(inputCol\u003d\"day_hour\", outputCol\u003d\"day_hourIndex\")\r\nstringIndexer_day_part \u003d StringIndexer(inputCol\u003d\"day_part\", outputCol\u003d\"day_partIndex\")\r\nmodel_day \u003d stringIndexer_day.fit(df)\r\nindexed_day \u003d model_day.transform(df)\r\nmodel_day_hour \u003d stringIndexer_day_hr.fit(indexed_day)\r\nindexed_all \u003d model_day_hour.transform(indexed_day)\r\nmodel_day_part \u003d stringIndexer_day_part.fit(indexed_all)\r\nindexed_all_including_day_part \u003d model_day_part.transform(indexed_all)\r\n\r\n\r\nencoder_day \u003d OneHotEncoder(inputCol\u003d\"dayIndex\", outputCol\u003d\"dayIndexVec\")\r\nencoder_dayHour \u003d OneHotEncoder(inputCol\u003d\"day_hourIndex\", outputCol\u003d\"day_hourIndexVec\")\r\nencoder_hour \u003d OneHotEncoder(inputCol\u003d\"hour\", outputCol\u003d\"hourIndexVec\")\r\nencoder_day_part \u003d OneHotEncoder(inputCol\u003d\"day_partIndex\", outputCol\u003d\"day_partIndexVec\")\r\n\r\n\r\nencoded_day \u003d encoder_day.transform(indexed_all_including_day_part)\r\nencode_day_dayHour \u003d encoder_dayHour.transform(encoded_day)\r\nencoded_all \u003d encoder_hour.transform(encode_day_dayHour)\r\nencoded_all_with_day_part \u003d encoder_day_part.transform(encoded_all)\r\n\r\nassembler \u003d VectorAssembler(inputCols\u003d[\"hourIndexVec\", \"dayIndexVec\", \"day_hourIndexVec\", \"day_partIndexVec\",\"bid\"], outputCol\u003d\"features\")\r\nassembled \u003d assembler.transform(encoded_all_with_day_part)\r\nassembled \u003d assembled.select([\"key\",\"label\",\"features\"])\r\nassembled.show(truncate \u003d False)",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:07:08 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [
          {
            "id": 2,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d2",
            "numTasks": 8,
            "numCompletedTasks": 8,
            "stages": [
              {
                "id": 2,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d2\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              },
              {
                "id": 3,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d3\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              }
            ],
            "status": "Success"
          },
          {
            "id": 3,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d3",
            "numTasks": 8,
            "numCompletedTasks": 8,
            "stages": [
              {
                "id": 5,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d5\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              },
              {
                "id": 4,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d4\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              }
            ],
            "status": "Success"
          },
          {
            "id": 4,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d4",
            "numTasks": 8,
            "numCompletedTasks": 8,
            "stages": [
              {
                "id": 6,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d6\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              },
              {
                "id": 7,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d7\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              }
            ],
            "status": "Success"
          },
          {
            "id": 5,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d5",
            "numTasks": 4,
            "numCompletedTasks": 4,
            "stages": [
              {
                "id": 8,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d8\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              }
            ],
            "status": "Success"
          },
          {
            "id": 6,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d6",
            "numTasks": 1,
            "numCompletedTasks": 1,
            "stages": [
              {
                "id": 9,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d9\u0026attempt\u003d0",
                "numCompleteTasks": 1,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 1
              }
            ],
            "status": "Success"
          }
        ],
        "numCompletedTasks": 29,
        "numTasks": 29,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569353587506_1844715530",
      "id": "20190924-193307_1206765289_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:33:07 PM",
      "dateSubmitted": "Sep 30, 2019 7:07:08 PM",
      "dateStarted": "Sep 30, 2019 7:07:08 PM",
      "dateFinished": "Sep 30, 2019 7:07:15 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "assembled.createOrReplaceTempView(\u0027tbl\u0027)\nspark.sql(\"\"\"\nselect key, count(distinct label) as count from tbl group by key order by count\n\"\"\").show(10)",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:07:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [
          {
            "id": 7,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d7",
            "numTasks": 404,
            "numCompletedTasks": 404,
            "stages": [
              {
                "id": 12,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d12\u0026attempt\u003d0",
                "numCompleteTasks": 200,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 200
              },
              {
                "id": 10,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d10\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              },
              {
                "id": 11,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d11\u0026attempt\u003d0",
                "numCompleteTasks": 200,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 200
              }
            ],
            "status": "Success"
          }
        ],
        "numCompletedTasks": 404,
        "numTasks": 404,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569353739616_-1790979330",
      "id": "20190924-193539_607877355_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:35:39 PM",
      "dateSubmitted": "Sep 30, 2019 7:07:21 PM",
      "dateStarted": "Sep 30, 2019 7:07:21 PM",
      "dateFinished": "Sep 30, 2019 7:07:30 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "assembled.persist()",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:07:34 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569353604960_-589575436",
      "id": "20190924-193324_1670534013_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:33:24 PM",
      "dateSubmitted": "Sep 30, 2019 7:07:34 PM",
      "dateStarted": "Sep 30, 2019 7:07:34 PM",
      "dateFinished": "Sep 30, 2019 7:07:34 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "keys \u003d [key[0] for key in assembled.select(\u0027key\u0027).distinct().collect()]\r\nlen(keys)",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:07:38 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [
          {
            "id": 8,
            "jobUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/jobs/job?spark\u003dtrue\u0026id\u003d8",
            "numTasks": 204,
            "numCompletedTasks": 204,
            "stages": [
              {
                "id": 13,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d13\u0026attempt\u003d0",
                "numCompleteTasks": 4,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 4
              },
              {
                "id": 14,
                "completed": true,
                "status": "Completed",
                "stageUrl": "https://us.qubole.com/cluster-proxy?encodedUrl\u003dhttp%3A%2F%2F10.31.70.223%3A8088%2Fproxy%2Fapplication_1569869972749_0001/stages/stage/?id\u003d14\u0026attempt\u003d0",
                "numCompleteTasks": 200,
                "numActiveTasks": 0,
                "numFailedTasks": 0,
                "numTotalTasks": 200
              }
            ],
            "status": "Success"
          }
        ],
        "numCompletedTasks": 204,
        "numTasks": 204,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569353698885_798334795",
      "id": "20190924-193458_1465675123_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:34:58 PM",
      "dateSubmitted": "Sep 30, 2019 7:07:38 PM",
      "dateStarted": "Sep 30, 2019 7:07:38 PM",
      "dateFinished": "Sep 30, 2019 7:07:42 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "keys",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:07:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v1",
      "jobName": "paragraph_1569359472082_1875792353",
      "id": "20190924-211112_673006396_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 9:11:12 PM",
      "dateSubmitted": "Sep 30, 2019 7:07:44 PM",
      "dateStarted": "Sep 30, 2019 7:07:44 PM",
      "dateFinished": "Sep 30, 2019 7:07:44 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "def get_metrics(keys_list, assembled \u003d assembled):\r\n\r\n    f1_test \u003d []\r\n    precision_test  \u003d []\r\n    recall_test \u003d []\r\n    accuracy_test \u003d []\r\n    for key in keys_list:\r\n        print(key)\r\n        this_df  \u003d assembled.filter(F.col(\u0027key\u0027) \u003d\u003d key).drop(\u0027key\u0027)\r\n        # Index labels, adding metadata to the label column.\r\n        # Fit on whole dataset to include all labels in index.\r\n        labelIndexer \u003d StringIndexer(inputCol\u003d\"label\", outputCol\u003d\"indexedLabel\").fit(this_df)\r\n\r\n        # Automatically identify categorical features, and index them.\r\n        # Set maxCategories so features with \u003e 4 distinct values are treated as continuous.\r\n        featureIndexer \u003d VectorIndexer(inputCol\u003d\"features\", outputCol\u003d\"indexedFeatures\", maxCategories\u003d4).fit(this_df)\r\n\r\n\r\n        # Split the data into training and test sets (30% held out for testing)\r\n        (trainingData, testData) \u003d this_df.randomSplit([0.8, 0.2], seed \u003d 0)\r\n\r\n        # Train a RandomForest model.\r\n        rf \u003d RandomForestClassifier(labelCol\u003d\"indexedLabel\", featuresCol\u003d\"indexedFeatures\")\r\n\r\n        # Convert indexed labels back to original labels.\r\n        labelConverter \u003d IndexToString(inputCol\u003d\"prediction\", outputCol\u003d\"predictedLabel\",\r\n                                       labels\u003dlabelIndexer.labels)\r\n\r\n        # Chain indexers and forest in a Pipeline\r\n        pipeline \u003d Pipeline(stages\u003d[labelIndexer, featureIndexer, rf, labelConverter])\r\n\r\n\r\n        paramGrid_rf \u003d ParamGridBuilder() \\\r\n                      .addGrid(rf.maxDepth, [10,20,25,30]) \\\r\n                      .addGrid(rf.numTrees, [10,20,30, 40, 50]) \\\r\n                      .addGrid(rf.maxBins, [16, 32,48,64]) \\\r\n                      .build()\r\n        \r\n       # print(\u0027step cross\u0027)    \r\n        crossval \u003d CrossValidator(estimator\u003dpipeline,\r\n                                  estimatorParamMaps\u003dparamGrid_rf,\r\n                                  evaluator\u003dMulticlassClassificationEvaluator(),\r\n                                  numFolds\u003d5,\r\n                                  parallelism \u003d 10)  \r\n        # Train model.  This also runs the indexers.\r\n        #print(\u0027model\u0027)\r\n        model \u003d crossval.fit(trainingData)\r\n\r\n\r\n        #print(\u0027predict\u0027)\r\n        # Make predictions.\r\n        predictions \u003d model.transform(testData)\r\n       # print(\u0027precision\u0027)\r\n        # Select (prediction, true label) and compute test error\r\n        precision \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"weightedPrecision\").evaluate(predictions)\r\n        recall \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"weightedRecall\").evaluate(predictions)\r\n\r\n        accuracy \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"accuracy\").evaluate(predictions)\r\n        f1 \u003d MulticlassClassificationEvaluator(labelCol\u003d\"indexedLabel\", predictionCol\u003d\"prediction\", metricName\u003d\"f1\").evaluate(predictions)\r\n        print([f1])\r\n        f1_test +\u003d  [f1]\r\n        precision_test  +\u003d [precision]\r\n        recall_test +\u003d   [recall]\r\n        accuracy_test +\u003d [accuracy]\r\n    return {\u0027f1_test\u0027:f1_test, \u0027precision_test\u0027:precision_test, \u0027accuracy_test\u0027:accuracy_test, \u0027recall_test\u0027:recall_test}\r\n        ",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:07:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v1",
      "jobName": "paragraph_1569353650699_550279024",
      "id": "20190924-193410_419823922_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:34:10 PM",
      "dateSubmitted": "Sep 30, 2019 7:07:49 PM",
      "dateStarted": "Sep 30, 2019 7:07:49 PM",
      "dateFinished": "Sep 30, 2019 7:07:49 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "title": "for all keys",
      "text": "result \u003d get_metrics(keys, assembled)",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:08:03 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v1",
      "jobName": "paragraph_1569353656565_1121646465",
      "id": "20190924-193416_2006825386_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:34:16 PM",
      "dateSubmitted": "Sep 30, 2019 7:08:03 PM",
      "dateStarted": "Sep 30, 2019 7:08:03 PM",
      "dateFinished": "Oct 1, 2019 4:51:17 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "result",
      "user": "mzhang@qubole.com",
      "dateUpdated": "Sep 30, 2019 7:08:19 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v1",
      "jobName": "paragraph_1569353671944_-1990187315",
      "id": "20190924-193431_927045998_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 24, 2019 7:34:31 PM",
      "dateSubmitted": "Sep 30, 2019 7:08:20 PM",
      "dateStarted": "Oct 1, 2019 4:51:17 AM",
      "dateFinished": "Oct 1, 2019 4:51:17 AM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    },
    {
      "text": "",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v0",
      "jobName": "paragraph_1569434758741_1954899414",
      "id": "20190925-180558_445706517_q_8BP5QTNG3D1569600599",
      "dateCreated": "Sep 25, 2019 6:05:58 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 1000
    }
  ],
  "name": "41207-Random Forest-Spark",
  "id": "8BP5QTNG3D1569600599",
  "angularObjects": {
    "2E4S6M6W5185291551722921649:shared_process": [],
    "2E6FKQYH2185291551722921638:shared_process": [],
    "2ENXRV2GT185291569340681242:shared_process": [],
    "2E6QENUQN185291551722921644:shared_process": []
  },
  "config": {
    "isDashboard": false,
    "defaultLang": "pyspark"
  },
  "info": {},
  "source": "FCN"
}